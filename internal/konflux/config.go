package konflux

type Config struct {
	Applications []string
	Versions     []string
	Repositories []Repository `json:"repos" yaml:"repos"`
}

type Application struct {
	Name         string
	Components   []Component
	Version      *Version
	Repositories []Repository
}

type Repository struct {
	Name        string
	Upstream    string
	Url         string
	Branch      Branch
	Components  []Component
	Application Application
	Tekton      Tekton
	GitHub      GitHub
	Patches     []Patch
}
type Branch struct {
	Name           string
	UpstreamBranch string `json:"upstream" yaml:"upstream"`
	Patches        []Patch
}

type Component struct {
	Name          string
	Nudges        []string
	Dockerfile    string
	ImagePrefix   string `json:"image-prefix" yaml:"image-prefix"`
	ImageSuffix   string `json:"image-suffix" yaml:"image-suffix"`
	PrefetchInput string `json:"prefetch-input" yaml:"prefetch-input"`
	Version       Version
	Repository    Repository
	Application   Application
	Tekton        Tekton
	NoImagePrefix bool `json:"no-image-prefix" yaml:"no-image-prefix"`
}

type Tekton struct {
	WatchedSources string `json:"watched-sources" yaml:"watched-sources"`
	EventType      string `json:"event_type" yaml:"event_type"`
	NudgeFiles     string `json:"build-nudge-files" yaml:"build-nudge-files"`
}

type GitHub struct {
	UpdateSources string `json:"update-sources" yaml:"update-sources"`
}

type Patch struct {
	Name   string
	Script string
}
type Version struct {
	Version     string
	ImagePrefix string `json:"image-prefix" yaml:"image-prefix"`
	ImageSuffix string `json:"image-suffix" yaml:"image-suffix"`
}

type ApplicationConfig struct {
	Repositories []string `json:"repos" yaml:"repos"`
	Name         string
}

type VersionConfig struct {
	Branches map[string]Branch `json:"branches" yaml:"branches"`
	Version  Version           `json:"version" yaml:",inline"`
}

const (
	konfluxDir          = ".konflux"
	gitHubDir           = ".github"
	tektonDir           = ".tekton"
	autoGeneratedHeader = "# Generated for Konflux Application {{.Name}} by openshift-pipelines/hack. DO NOT EDIT"
)
